version: '3.7'

services:
  rate-limiter-ms:
    build:
      context: ./
      args:
        - APP_NAME=rate_limiter
        - CLI_NAME=cli
      dockerfile: .deploy/docker/Dockerfile
      network: host
    container_name: rate-limiter-ms
    restart: always
    ports:
      - ${RATE_GRPC_EXTERNAL_PORT}:${RATE_GRPC_PORT}
#    depends_on:
#      - rate-limiter-db
#      - rate-limiter-redis
#      - rate-limiter-goose
    networks:
      rate-limiter:
        ipv4_address: 172.20.1.5
    volumes:
      - ./bin:/app/bin
    command:
      - "/app/rate_limiter"

  rate-limiter-db:
    container_name: rate-limiter-db
    image: postgres:15.3
    environment:
      POSTGRES_USER: ${RATE_DB_USER}
      POSTGRES_PASSWORD: ${RATE_DB_PASSWORD}
      POSTGRES_DB: ${RATE_DB_NAME}
    ports:
      - ${RATE_DB_PORT}:5432
    volumes:
      #- ./data/postgres:/var/lib/postgresql/data
      - ./.deploy/db/initdb.sql:/docker-entrypoint-initdb.d/initdb.sql
    networks:
      rate-limiter:
        ipv4_address: 172.20.1.2

#  rate-limiter-redis:
#    image: redis:5.0.14-alpine
#    container_name: rate-limiter-redis
#    restart: always
#    ports:
#      - ${RATE_REDIS_PORT}:6379
#    networks:
#      rate-limiter:
#        ipv4_address: 172.20.1.3

  rate-limiter-goose:
    container_name: rate-limiter-goose
    image: ghcr.io/kukymbr/goose-docker:latest
    environment:
      - GOOSE_DRIVER=postgres
      - GOOSE_DBSTRING=host=172.20.1.2 port=5432 user=${RATE_DB_USER} password=${RATE_DB_PASSWORD} dbname=${RATE_DB_NAME}
    volumes:
      - ./.deploy/db/migrations:/migrations
    networks:
      rate-limiter:
        ipv4_address: 172.20.1.6
    command: ["up"]
    depends_on:
      - rate-limiter-db

networks:
  rate-limiter:
    driver: bridge
    name: "rate-limiter"
    ipam:
      config:
        - subnet: 172.20.1.0/24
    driver_opts:
      com.docker.network.bridge.name: "br-rate-limiter"
